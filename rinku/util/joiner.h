#ifndef RINKU_JOINER_H
#define RINKU_JOINER_H

#include "../rinku.h"

namespace Rinku {
  namespace Util {
    RINKU_OUTPUT(JOINER_OUT, 64);
    RINKU_SIGNAL_LIST(JoinerOutputs, JOINER_OUT);

    RINKU_INPUT(JOINER_IN_0, 1);  RINKU_INPUT(JOINER_IN_1, 1);  RINKU_INPUT(JOINER_IN_2, 1);
    RINKU_INPUT(JOINER_IN_3, 1);  RINKU_INPUT(JOINER_IN_4, 1);  RINKU_INPUT(JOINER_IN_5, 1);
    RINKU_INPUT(JOINER_IN_6, 1);  RINKU_INPUT(JOINER_IN_7, 1);  RINKU_INPUT(JOINER_IN_8, 1);
    RINKU_INPUT(JOINER_IN_9, 1);  RINKU_INPUT(JOINER_IN_10, 1); RINKU_INPUT(JOINER_IN_11, 1);
    RINKU_INPUT(JOINER_IN_12, 1); RINKU_INPUT(JOINER_IN_13, 1); RINKU_INPUT(JOINER_IN_14, 1);
    RINKU_INPUT(JOINER_IN_15, 1); RINKU_INPUT(JOINER_IN_16, 1); RINKU_INPUT(JOINER_IN_17, 1);
    RINKU_INPUT(JOINER_IN_18, 1); RINKU_INPUT(JOINER_IN_19, 1); RINKU_INPUT(JOINER_IN_20, 1);
    RINKU_INPUT(JOINER_IN_21, 1); RINKU_INPUT(JOINER_IN_22, 1); RINKU_INPUT(JOINER_IN_23, 1);
    RINKU_INPUT(JOINER_IN_24, 1); RINKU_INPUT(JOINER_IN_25, 1); RINKU_INPUT(JOINER_IN_26, 1);
    RINKU_INPUT(JOINER_IN_27, 1); RINKU_INPUT(JOINER_IN_28, 1); RINKU_INPUT(JOINER_IN_29, 1);
    RINKU_INPUT(JOINER_IN_30, 1); RINKU_INPUT(JOINER_IN_31, 1); RINKU_INPUT(JOINER_IN_32, 1);
    RINKU_INPUT(JOINER_IN_33, 1); RINKU_INPUT(JOINER_IN_34, 1); RINKU_INPUT(JOINER_IN_35, 1);
    RINKU_INPUT(JOINER_IN_36, 1); RINKU_INPUT(JOINER_IN_37, 1); RINKU_INPUT(JOINER_IN_38, 1);
    RINKU_INPUT(JOINER_IN_39, 1); RINKU_INPUT(JOINER_IN_40, 1); RINKU_INPUT(JOINER_IN_41, 1);
    RINKU_INPUT(JOINER_IN_42, 1); RINKU_INPUT(JOINER_IN_43, 1); RINKU_INPUT(JOINER_IN_44, 1);
    RINKU_INPUT(JOINER_IN_45, 1); RINKU_INPUT(JOINER_IN_46, 1); RINKU_INPUT(JOINER_IN_47, 1);
    RINKU_INPUT(JOINER_IN_48, 1); RINKU_INPUT(JOINER_IN_49, 1); RINKU_INPUT(JOINER_IN_50, 1);
    RINKU_INPUT(JOINER_IN_51, 1); RINKU_INPUT(JOINER_IN_52, 1); RINKU_INPUT(JOINER_IN_53, 1);
    RINKU_INPUT(JOINER_IN_54, 1); RINKU_INPUT(JOINER_IN_55, 1); RINKU_INPUT(JOINER_IN_56, 1);
    RINKU_INPUT(JOINER_IN_57, 1); RINKU_INPUT(JOINER_IN_58, 1); RINKU_INPUT(JOINER_IN_59, 1);
    RINKU_INPUT(JOINER_IN_60, 1); RINKU_INPUT(JOINER_IN_61, 1); RINKU_INPUT(JOINER_IN_62, 1);
    RINKU_INPUT(JOINER_IN_63, 1);

    RINKU_SIGNAL_LIST(JoinerInputs,
		      JOINER_IN_0,  JOINER_IN_1,  JOINER_IN_2,  JOINER_IN_3,
		      JOINER_IN_4,  JOINER_IN_5,  JOINER_IN_6,  JOINER_IN_7,
		      JOINER_IN_8,  JOINER_IN_9,  JOINER_IN_10, JOINER_IN_11,
		      JOINER_IN_12, JOINER_IN_13, JOINER_IN_14, JOINER_IN_15,
		      JOINER_IN_16, JOINER_IN_17, JOINER_IN_18, JOINER_IN_19,
		      JOINER_IN_20, JOINER_IN_21, JOINER_IN_22, JOINER_IN_23,
		      JOINER_IN_24, JOINER_IN_25, JOINER_IN_26, JOINER_IN_27,
		      JOINER_IN_28, JOINER_IN_29, JOINER_IN_30, JOINER_IN_31,
		      JOINER_IN_32, JOINER_IN_33, JOINER_IN_34, JOINER_IN_35,
		      JOINER_IN_36, JOINER_IN_37, JOINER_IN_38, JOINER_IN_39,
		      JOINER_IN_40, JOINER_IN_41, JOINER_IN_42, JOINER_IN_43,
		      JOINER_IN_44, JOINER_IN_45, JOINER_IN_46, JOINER_IN_47,
		      JOINER_IN_48, JOINER_IN_49, JOINER_IN_50, JOINER_IN_51,
		      JOINER_IN_52, JOINER_IN_53, JOINER_IN_54, JOINER_IN_55,
		      JOINER_IN_56, JOINER_IN_57, JOINER_IN_58, JOINER_IN_59,
		      JOINER_IN_60, JOINER_IN_61, JOINER_IN_62, JOINER_IN_63
		      );

    class Joiner: RINKU_MODULE(JoinerInputs, JoinerOutputs) {
    public:
      virtual void update() override {
	size_t result = 0;
	for (size_t idx = 0; idx != Inputs::N; ++idx) {
	  result |= (getInput(idx, 1) << idx);
	}
    
	setOutput<JOINER_OUT>(result);
      }
    };
    
  } // namespace Util
} // namespace Rinku
#endif // JOINER_H
