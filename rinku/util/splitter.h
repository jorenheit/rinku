#ifndef RINKU_SPLITTER_H
#define RINKU_SPLITTER_H

#include "../rinku.h"

namespace Rinku {
  namespace Util {
    RINKU_INPUT(SPLITTER_IN, 64);
    RINKU_SIGNAL_LIST(SplitterInputs, SPLITTER_IN);

    RINKU_OUTPUT(SPLITTER_OUT_0, 1);  RINKU_OUTPUT(SPLITTER_OUT_1, 1);  RINKU_OUTPUT(SPLITTER_OUT_2, 1);
    RINKU_OUTPUT(SPLITTER_OUT_3, 1);  RINKU_OUTPUT(SPLITTER_OUT_4, 1);  RINKU_OUTPUT(SPLITTER_OUT_5, 1);
    RINKU_OUTPUT(SPLITTER_OUT_6, 1);  RINKU_OUTPUT(SPLITTER_OUT_7, 1);  RINKU_OUTPUT(SPLITTER_OUT_8, 1);
    RINKU_OUTPUT(SPLITTER_OUT_9, 1);  RINKU_OUTPUT(SPLITTER_OUT_10, 1); RINKU_OUTPUT(SPLITTER_OUT_11, 1);
    RINKU_OUTPUT(SPLITTER_OUT_12, 1); RINKU_OUTPUT(SPLITTER_OUT_13, 1); RINKU_OUTPUT(SPLITTER_OUT_14, 1);
    RINKU_OUTPUT(SPLITTER_OUT_15, 1); RINKU_OUTPUT(SPLITTER_OUT_16, 1); RINKU_OUTPUT(SPLITTER_OUT_17, 1);
    RINKU_OUTPUT(SPLITTER_OUT_18, 1); RINKU_OUTPUT(SPLITTER_OUT_19, 1); RINKU_OUTPUT(SPLITTER_OUT_20, 1);
    RINKU_OUTPUT(SPLITTER_OUT_21, 1); RINKU_OUTPUT(SPLITTER_OUT_22, 1); RINKU_OUTPUT(SPLITTER_OUT_23, 1);
    RINKU_OUTPUT(SPLITTER_OUT_24, 1); RINKU_OUTPUT(SPLITTER_OUT_25, 1); RINKU_OUTPUT(SPLITTER_OUT_26, 1);
    RINKU_OUTPUT(SPLITTER_OUT_27, 1); RINKU_OUTPUT(SPLITTER_OUT_28, 1); RINKU_OUTPUT(SPLITTER_OUT_29, 1);
    RINKU_OUTPUT(SPLITTER_OUT_30, 1); RINKU_OUTPUT(SPLITTER_OUT_31, 1); RINKU_OUTPUT(SPLITTER_OUT_32, 1);
    RINKU_OUTPUT(SPLITTER_OUT_33, 1); RINKU_OUTPUT(SPLITTER_OUT_34, 1); RINKU_OUTPUT(SPLITTER_OUT_35, 1);
    RINKU_OUTPUT(SPLITTER_OUT_36, 1); RINKU_OUTPUT(SPLITTER_OUT_37, 1); RINKU_OUTPUT(SPLITTER_OUT_38, 1);
    RINKU_OUTPUT(SPLITTER_OUT_39, 1); RINKU_OUTPUT(SPLITTER_OUT_40, 1); RINKU_OUTPUT(SPLITTER_OUT_41, 1);
    RINKU_OUTPUT(SPLITTER_OUT_42, 1); RINKU_OUTPUT(SPLITTER_OUT_43, 1); RINKU_OUTPUT(SPLITTER_OUT_44, 1);
    RINKU_OUTPUT(SPLITTER_OUT_45, 1); RINKU_OUTPUT(SPLITTER_OUT_46, 1); RINKU_OUTPUT(SPLITTER_OUT_47, 1);
    RINKU_OUTPUT(SPLITTER_OUT_48, 1); RINKU_OUTPUT(SPLITTER_OUT_49, 1); RINKU_OUTPUT(SPLITTER_OUT_50, 1);
    RINKU_OUTPUT(SPLITTER_OUT_51, 1); RINKU_OUTPUT(SPLITTER_OUT_52, 1); RINKU_OUTPUT(SPLITTER_OUT_53, 1);
    RINKU_OUTPUT(SPLITTER_OUT_54, 1); RINKU_OUTPUT(SPLITTER_OUT_55, 1); RINKU_OUTPUT(SPLITTER_OUT_56, 1);
    RINKU_OUTPUT(SPLITTER_OUT_57, 1); RINKU_OUTPUT(SPLITTER_OUT_58, 1); RINKU_OUTPUT(SPLITTER_OUT_59, 1);
    RINKU_OUTPUT(SPLITTER_OUT_60, 1); RINKU_OUTPUT(SPLITTER_OUT_61, 1); RINKU_OUTPUT(SPLITTER_OUT_62, 1);
    RINKU_OUTPUT(SPLITTER_OUT_63, 1);

    RINKU_SIGNAL_LIST(SplitterOutputs,
		SPLITTER_OUT_0,  SPLITTER_OUT_1,  SPLITTER_OUT_2,  SPLITTER_OUT_3,
		SPLITTER_OUT_4,  SPLITTER_OUT_5,  SPLITTER_OUT_6,  SPLITTER_OUT_7,
		SPLITTER_OUT_8,  SPLITTER_OUT_9,  SPLITTER_OUT_10, SPLITTER_OUT_11,
		SPLITTER_OUT_12, SPLITTER_OUT_13, SPLITTER_OUT_14, SPLITTER_OUT_15,
		SPLITTER_OUT_16, SPLITTER_OUT_17, SPLITTER_OUT_18, SPLITTER_OUT_19,
		SPLITTER_OUT_20, SPLITTER_OUT_21, SPLITTER_OUT_22, SPLITTER_OUT_23,
		SPLITTER_OUT_24, SPLITTER_OUT_25, SPLITTER_OUT_26, SPLITTER_OUT_27,
		SPLITTER_OUT_28, SPLITTER_OUT_29, SPLITTER_OUT_30, SPLITTER_OUT_31,
		SPLITTER_OUT_32, SPLITTER_OUT_33, SPLITTER_OUT_34, SPLITTER_OUT_35,
		SPLITTER_OUT_36, SPLITTER_OUT_37, SPLITTER_OUT_38, SPLITTER_OUT_39,
		SPLITTER_OUT_40, SPLITTER_OUT_41, SPLITTER_OUT_42, SPLITTER_OUT_43,
		SPLITTER_OUT_44, SPLITTER_OUT_45, SPLITTER_OUT_46, SPLITTER_OUT_47,
		SPLITTER_OUT_48, SPLITTER_OUT_49, SPLITTER_OUT_50, SPLITTER_OUT_51,
		SPLITTER_OUT_52, SPLITTER_OUT_53, SPLITTER_OUT_54, SPLITTER_OUT_55,
		SPLITTER_OUT_56, SPLITTER_OUT_57, SPLITTER_OUT_58, SPLITTER_OUT_59,
		SPLITTER_OUT_60, SPLITTER_OUT_61, SPLITTER_OUT_62, SPLITTER_OUT_63
		);

    class Splitter: RINKU_MODULE(SplitterInputs, SplitterOutputs) {

    public:
      virtual void update() override {
	size_t input = getInput<SPLITTER_IN>();
	for (size_t idx = 0; idx != Outputs::N; ++idx) {
	  setOutput(idx, (input >> idx), 1);
	}
      }
    };
  } // namespace Util
} // namespace Rinku

#endif // RINKU_SPLITTER_H
